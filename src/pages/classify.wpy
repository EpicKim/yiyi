<template>
  <view class="classify" style="height:{{windowHeight-50}}px">
    <scroll-view class="classify_catetory" scroll-y scroll-with-animation="true" style="height:{{windowHeight-50}}px">
      <view class="name {{item.active? 'active':''}}" wx:for="{{rootcateList}}" wx:key="item" @tap="changeCate" data-id="{{item.id}}">
        {{item.name}}
      </view>
    </scroll-view>
    <scroll-view class="classify_detail" scroll-y scroll-with-animation="true" style="height:{{windowHeight-50}}px">
        <view class="children">
          <navigator hover-class="none" class="children_item" wx:for="{{childcateList}}" wx:for-item="item" wx:key="index" url="/pages/search?cid={{item.id}}&cname={{item.name}}">
            <image class="child_image" src="{{item.thumb_img}}" style="width:40px;height:40px;"/>
            <view class="child_name" data-id="{{item.id}}" data-parent_id="{{item.parent_id}}">{{item.name}}</view>
          </navigator>
        </view>
    </scroll-view>
  </view>
</template>
<script>
import wepy from "wepy";
import api from "../api/api";
import {
  SYSTEM_INFO,
  SEL_CLASS_CODE,
  CHILD_CATE,
  TIME_DIFF_CATE
} from "../utils/constant";

import tip from "../utils/tip";

export default class Classify extends wepy.page {
  config = {
    navigationBarTitleText: "分类"
  };
  components = {};

  data = {
    scrollTop: 100,
    windowHeight: 0,
    list: {},
    //一级分类数据
    rootcateList: {},
    //二级分类数据
    childcateList: {}
  };

  async getChildCate(rootCateCode) {
    //根据父类id获取子分类
    //加入缓存,减少请求次数,constant.js中控制时间间隔
    let _timestamp = Date.parse(new Date()) / 1000; //毫秒级别
    let cache_key = CHILD_CATE + "_" + rootCateCode; //缓存key
    let child_cate = wx.getStorageSync(cache_key) || {};

    if (child_cate && _timestamp - child_cate.time <= TIME_DIFF_CATE) {
      this.childcateList = child_cate.data;
    } else {
      const json = await api.childGoodsCatetoryList({
        query: {
          parentCategoryID: rootCateCode
        }
      });
      if (json.data.code == 0) {
        this.childcateList = json.data.data;
        wx.setStorageSync(cache_key, {
          time: _timestamp,
          data: this.childcateList
        });
      } else {
        tip.error(json.data.error);
      }
    }
    this.$apply();
  }

  //异步获取顶级分类
  async getRootCateTopLevel() {
    const json = await api.rootCtegoryList({
      query: {}
    });
    if (json.data.code == 0) {
      this.rootcateList = json.data.data;
      if (this.rootcateList.length > 0) {
        let selCode = wx.getStorageSync(SEL_CLASS_CODE); //高亮的cateid
        var selRottCateCode = this.rootcateList[0].id; // cateID
        //没有selCode,默认为第一个分类选中
        if (selCode.length == 0) {
          this.rootcateList[0].active = true; //active属性为当前选中的哪个(默认为第一个)
        } else {
          for (var i = 0; i < this.rootcateList.length; i++) {
            if (selCode == this.rootcateList[i].id) {
              //如果id=selCode,则选中该分类
              selRottCateCode = this.rootcateList[i].id;
              this.rootcateList[i].active = true;
            }
          }
        }

        this.getChildCate(selRottCateCode);
      }
    } else {
      tip.error(json.data.error);
    }
    this.$apply();
  }

  onLoad() {
    let that = this;
    let systemInfo = wx.getStorageSync(SYSTEM_INFO);
    this.windowHeight = systemInfo.windowHeight;
    this.getRootCateTopLevel();
    this.$apply();
  }

  onShow() {}

  computed = {};
  methods = {
    changeCate(e) {
      let pid = e.currentTarget.dataset.id; //获取当前行中 data-id属性的值
      this.getChildCate(pid);
      wx.setStorageSync(SEL_CLASS_CODE, pid);
      //设置一级分类的选中状态
      for (var i = 0; i < this.rootcateList.length; i++) {
        var rootCate = this.rootcateList[i];
        rootCate.active = false;
        if (rootCate.id == pid) {
          rootCate.active = true;
        }
      }
    }
  };
  events = {};
}
</script>
<style lang="less">
.search_read_only .search_content {
  width: 100%;
}

.classify {
  display: flex;
  position: relative;
  .classify_catetory {
    width: 200rpx;
    position: relative;
    z-index: 1;
    .name {
      text-align: center;
      height: 100rpx;
      line-height: 100rpx;
      font-size: 28rpx;
      color: #666;
      overflow: hidden;
      white-space: nowrap;
      text-overflow: ellipsis;
    }
    .active {
      border-left: 6rpx solid #ff6a3c;
      background: #fff;
      color: #ff6a3c;
    }
  }
  .classify_detail {
    position: relative;
    z-index: 999;
    // margin-left: -15rpx;
    background: #fff;
    padding: 15px 10px 10px 30px;
    .classify_item {
    }
    .title {
      font-size: 30rpx;
      color: #333;
      margin-left: 25rpx;
    }
    .children {
      display: flex;
      flex-wrap: wrap;
      margin: 20rpx 0rpx;
    }
    .child_image {
      width: 60px;
      height: 60px;
    }
    .child_name {
      font-size: 26rpx;
      color: #666;
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
      width: 170rpx;
    }
    .children_item {
      height: 200rpx;
      width: 170rpx;
      text-align: center;
    }
  }
}
</style>
