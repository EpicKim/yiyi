<template>
    <view class="container">


        <view class="recommend-title">火爆商品</view>

        <discover :list.sync="hottestList"></discover>

        <view class="recommend-title">最新上架</view>
        <discover :list.sync="latestList"></discover>
        <placeholder :show.sync="is_empty" message="暂无发现数据"></placeholder>

    </view>
</template>
<script>
    import wepy from 'wepy';
    import api from '../api/api';
    import tip from '../utils/tip'
    import Discover from '../components/discover'
    import Bombscreen from '../components/bomb_screen'
    import BottomLoadMore from "../components/common/bottomLoadMore"
    import Placeholder from "../components/common/placeholder"
    import PROGRAM_TITLE from "../utils/constant";

    export default class Home extends wepy.page {
        config = {
            navigationBarTitleText: '千衣殿',
        }
        components = {
            discover: Discover,
            bottomLoadMore: BottomLoadMore,
            placeholder: Placeholder,
            bombscreen: Bombscreen
        }
        data = {

            imgUrls: [
                '../images/image_demo.png',
                '../images/identify.jpeg'
            ],
            indicatorDots: true,
            autoplay: true,
            interval: 3000,
            duration: 1000,
            indicatorActiveColor: "#fff",

            hottestCateList: [],    //热门分类
            hottestList: [],   //火爆商品
            bannerList: [],     //banner商品
            latestList: [],     //新品

            //是否有数据
            is_empty: false,
            //当前页面
            currentPage: 1,
            //总页数
            page_total: 0,
            //是否显示 底部loading
            showLoading: true,
            //防止重复加载
            preventRepeatReuqest: false,
            //广告列表
            adList: [],
            tps: 0,
            is_show_alert: true
        }

        //获取首页显示的商品
        async getDiscoverList() {
            let that = this;
            const json = await api.getHomeDisvocerList();
            if (json.data.code == 0) {

                that.hottestCateList = [...that.hottestCateList, ...json.data.data.hot_category];
                that.hottestList = [...that.hottestList, ...json.data.data.hot];
                that.bannerList = [...that.bannerList, ...json.data.data.banner];
                that.latestList = [...that.latestList, ...json.data.data.latest];

                that.$apply();
            } else {
                tip.error(json.data.msg);
            }
            that.showLoading = false;
        }

        onLoad() {
            let that = this;
            that.getDiscoverList();

        }

        computed = {}
        methods = {
            goToDetail(product_id) {
                if(!product_id){
                    return ;
                }
                wepy.navigateTo({
                    url: `/pages/goods_detail?product_id=${product_id}`
                })
            },
            onShareAppMessage: function (res) {
                if (res.from === 'button') {
                    // 来自页面内转发按钮

                }
                return {
                    title: PROGRAM_TITLE,
                    path: '/pages/home',
                    success: function (res) {
                        // 转发成功
                    },
                    fail: function (res) {
                        // 转发失败
                    }
                }
            },
//            alertCallback() {
//                tip.alert('跳转');
//            },
//            closeAlert() {
//                tip.alert('关闭');
//            }
        }
        events = {}
        //加载更多
        onReachBottom() {
            let that = this;
            that.showLoading = true;
            //判断总页数是否大于翻页数
            if ((that.page_total) > that.currentPage) {
                //防止重复加载
                if (that.preventRepeatReuqest) {
                    return true;
                }
                that.preventRepeatReuqest = true;
                that.currentPage++;
                that.preventRepeatReuqest = false;
            } else {
                that.showLoading = false;
            }
        };
    }

</script>
<style lang="less">
    .swiper {
        height: 348rpx;
    }

    .slide-image {
        width: 100%;
        height: 100%;
    }

    .pos {
        position: absolute;
        top: 0rpx;
        left: 0;
        right: 0;

    .search_content {
        background: rgba(0, 0, 0, 0.1);
        border: 1px solid #efefee;

    .icon-search,
    .search_input {
        color: #efefee;
    }

    }
    .message {
        display: block;
        text-align: center;
        margin-left: 20rpx;
    }

    .doc {
        font-size: 16rpx;
        display: block;
    }

    }

    .nav_list {
        color: #404040;
        display: flex;
        font-size: 26rpx;
        justify-content: space-between;
        padding: 17rpx 50rpx;

        navigator {
            text-align: center
        }

        .nav_icon {
            height: 100rpx;
            margin: 0 auto;
            width: 100rpx;
            margin-bottom: 14rpx;
        }

        .nav_text {
            font-size: 26rpx
        }

    }

    .recommend-title {
        padding: 10rpx 0 20rpx 20rpx;
        text-align: left;
        color: #000000;
        font-size: 16px;
    }

    .home_background {
        color: 708090;
    }

</style>
